
/**
 *  \brief 霍纳法则，在中国，霍纳法则也被称为秦九韶算法
 *  
 *  \param [in] a 多项式系数的数组
 *  \param [in] n 数组长度
 *  \param [in] x 多项式中x的值
 *  \return 返回求得多项式结果
 *  
 *  \details 时间复杂度为O(N)
 *  要对多项式Pn(x)= anx^n + a(n－1)x^(n-1) + … + a1x + a0求值，
 *  直接方法是对每一项分别求值，并把每一项求的值累加起来，
 *  这种方法十分低效，它需要进行n+(n－1)+…+1=n(n+1)/2次乘法运算和n次加法运算。
 *  通过如下变换我们可以得到一种快得多的算法，
 *  即Pn(x)= anx^n + a(n－1)x^(n-1) +…+ a1x + a0
 *  =((…(((anx + an－1)x + an－2)x + an－3)…)x + a1)x + a0，
 *  这种求值的安排我们称为霍纳法则。
 *  例如，当x=3时，计算p(x)=2x^4 － x^3 + 3x^2 + x － 5的值。
 *  对于多项式p(x)=2x^4 － x^3 + 3x^2 + x － 5，我们按霍纳法则进行变换，有：
 *  p(x)=2x^4 － x^3 + 3x^2 + x － 5
 *  =x(2x^3 － x^2 + 3x + 1) － 5
 *  =x(x(2x^2 － x + 3) + 1) － 5
 *  =x(x(x(2x － 1) + 3) + 1) － 5
 */
int Horner(int* a, int n, int x)
{
	int poly = 0;
	for(int i = n - 1; i >= 0; --i)
		poly = x*poly + a[i];
	
	return poly;
}